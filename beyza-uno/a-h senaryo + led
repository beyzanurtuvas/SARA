#include <Servo.h>

// ------------ SERVO NESNELERİ -------------
Servo servo1; // ESC (itici motor)
Servo servo2; // pitch kontrol (yukarı)
Servo servo3; // yaw sağ
Servo servo4; // pitch ters (aşağı)
Servo servo5; // yaw sol
Servo servoLED; // PWM LED çıkışı (örneğin D11’e bağlı)

// ------------ PWM SABİTLERİ --------------
const int MOTOR_STOP_PWM  = 1490;
const int MOTOR_MAX_PWM   = 1000;
const int MOTOR_DONUS_PWM = 1250;

// LED PWM değerleri (Alacakart mantığına uygun)
const int LED_PWM_ACIK  = 1900;
const int LED_PWM_KAPALI = 1100;

// ------------ PINLER ---------------------
const int ledPin = 11; // Harici LED’in bağlandığı PWM destekli pin

// ------------ ZAMANLAR -------------------
const int SISTEM_BASLAMA_GECIKMESI = 5000;
const int GOREV_ARASI_GECIKME      = 20000;

// ------------ SETUP ----------------------
void setup() {
  // Servo pin atamaları
  servo1.attach(3);   // ESC
  servo2.attach(5);   // Pitch
  servo3.attach(6);   // Yaw sağ
  servo4.attach(9);   // Pitch ters
  servo5.attach(10);  // Yaw sol
  servoLED.attach(ledPin); // LED PWM çıkışı

  servo1.writeMicroseconds(MOTOR_STOP_PWM);
  tumServolariNotrle();
  ledPWMSon();
  delay(2000);

  delay(SISTEM_BASLAMA_GECIKMESI);

  // Görevler
  gorev_g(); delay(GOREV_ARASI_GECIKME);
  gorev_b(); delay(GOREV_ARASI_GECIKME);
  gorev_c(); delay(GOREV_ARASI_GECIKME);
  gorev_d(); delay(GOREV_ARASI_GECIKME);
  gorev_e(); delay(GOREV_ARASI_GECIKME);
  gorev_f(); delay(GOREV_ARASI_GECIKME);
  gorev_a(); delay(GOREV_ARASI_GECIKME);
  gorev_h();
}

void loop() {
  // Görevler bir kez setup'ta çalışır
}

// ------------ LED PWM KONTROL -------------
void ledPWMYak() {
  servoLED.writeMicroseconds(LED_PWM_ACIK); // LED açık (parlak)
}

void ledPWMSon() {
  servoLED.writeMicroseconds(LED_PWM_KAPALI); // LED kapalı
}

// ------------ GÖREV A (eski G) ------------
void gorev_a() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(135);
  servo5.write(45);
  delay(1500);

  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV G (eski A) ------------
void gorev_g() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
  delay(300);

  for (int i = 0; i < 3; i++) {
    servo3.write(45);
    servo5.write(135);
    motorYavasArtir(MOTOR_STOP_PWM, MOTOR_DONUS_PWM);
    delay(1500);
    tumServolariNotrle();
    motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
    delay(2000);
    motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
    tumServolariNotrle();
    delay(300);
  }

  servo2.write(135);
  servo4.write(45);
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(1000);
  servo2.write(45);
  servo4.write(135);
  delay(1000);
  servo2.write(135);
  servo4.write(45);
  delay(1000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);

  ledPWMYak(); // LED açık
  tumServolariNotrle();
  delay(1000);
  ledPWMSon(); // LED kapalı
}

// ------------ GÖREV D (LED ile 3sn kal) ------
void gorev_d() {
  tumServolariNotrle();
  servo2.write(135);
  servo4.write(45);
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(5000);

  servo2.write(90);
  servo4.write(90);
  delay(3000);

  servo2.write(45);
  servo4.write(135);
  delay(7000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();

  // Yüzeye çıkış
  ledPWMYak();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_DONUS_PWM);
  delay(3000);
  motorYavasAzalt(MOTOR_DONUS_PWM, MOTOR_STOP_PWM);
  ledPWMSon();
  tumServolariNotrle();
}

// ------------ GÖREV B --------------------
void gorev_b() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(135);
  servo5.write(45);
  delay(1500);
  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV C --------------------
void gorev_c() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(45);
  servo5.write(135);
  delay(1500);
  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV E --------------------
void gorev_e() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);
  servo2.write(135);
  servo4.write(45);
  delay(5000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV F --------------------
void gorev_f() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);
  servo2.write(45);
  servo4.write(135);
  delay(5000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV H --------------------
void gorev_h() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(5000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(45);
  servo5.write(135);
  delay(1500);
  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(135);
  servo5.write(45);
  delay(1500);
  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);
  servo2.write(45);
  servo4.write(135);
  delay(5000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ MOTOR PWM GEÇİŞLERİ -------------
void motorYavasArtir(int baslangicPWM, int hedefPWM) {
  for (int pwm = baslangicPWM; pwm >= hedefPWM; pwm -= 2) {
    servo1.writeMicroseconds(pwm);
    delay(10);
  }
}

void motorYavasAzalt(int baslangicPWM, int hedefPWM) {
  for (int pwm = baslangicPWM; pwm <= hedefPWM; pwm += 2) {
    servo1.writeMicroseconds(pwm);
    delay(10);
  }
}

// ------------ TÜM SERVOLARI NÖTRLE -------------
void tumServolariNotrle() {
  servo2.write(90);
  servo3.write(90);
  servo4.write(90);
  servo5.write(90);
}
