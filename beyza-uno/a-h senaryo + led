#include <Servo.h>

// ------------ SERVO NESNELERİ -------------
Servo servo1; // ESC (itici motor)
Servo servo2; // pitch kontrol (yukarı)
Servo servo3; // yaw sağ
Servo servo4; // pitch ters (aşağı)
Servo servo5; // yaw sol

// ------------ PWM SABİTLERİ --------------
const int MOTOR_STOP_PWM  = 1490;  // ESC için durma sinyali (TERS sistem)
const int MOTOR_MAX_PWM   = 1000;  // ESC için maksimum ters hız
const int MOTOR_DONUS_PWM = 1250;  // ESC için orta seviye hız (dönüş için)

// ------------ ZAMANLAR -------------------
const int SISTEM_BASLAMA_GECIKMESI = 5000;   // sistem açılış bekleme süresi
const int GOREV_ARASI_GECIKME      = 20000;  // görevler arası bekleme süresi

// ------------ LED PINİ -------------------
const int ledPin = 13; // Arduino UNO'nun dahili LED pini veya harici LED

// ------------ SETUP ----------------------
void setup() {
  // Servo pin tanımlamaları
  servo1.attach(3);   // ESC
  servo2.attach(5);   // Pitch yukarı
  servo3.attach(6);   // Yaw sağ
  servo4.attach(9);   // Pitch aşağı (ters)
  servo5.attach(10);  // Yaw sol

  pinMode(ledPin, OUTPUT); // LED çıkış olarak ayarlanır

  // Başlangıçta motor ve servo sıfırlama
  servo1.writeMicroseconds(MOTOR_STOP_PWM);
  tumServolariNotrle();
  delay(2000);  // ESC'nin hazır olması için

  delay(SISTEM_BASLAMA_GECIKMESI); // sistem başlama gecikmesi

  // Görev sıralaması (a ve g yer değiştirdi!)
  gorev_g(); delay(GOREV_ARASI_GECIKME);
  gorev_b(); delay(GOREV_ARASI_GECIKME);
  gorev_c(); delay(GOREV_ARASI_GECIKME);
  gorev_d(); delay(GOREV_ARASI_GECIKME);
  gorev_e(); delay(GOREV_ARASI_GECIKME);
  gorev_f(); delay(GOREV_ARASI_GECIKME);
  gorev_a(); delay(GOREV_ARASI_GECIKME);
  gorev_h();
}

void loop() {
  // Görevler sadece bir defa çalışacak
}

// ------------ GÖREV A (eski G) ------------
void gorev_a() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(135);
  servo5.write(45);
  delay(1500);

  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV G (eski A) ------------
void gorev_g() {
  tumServolariNotrle();

  // Düz git 3 saniye
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
  delay(300);

  // 3 kez sağa dön → düz git
  for (int i = 0; i < 3; i++) {
    servo3.write(45);
    servo5.write(135);
    motorYavasArtir(MOTOR_STOP_PWM, MOTOR_DONUS_PWM);
    delay(1500);
    tumServolariNotrle();
    motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
    delay(2000);
    motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
    tumServolariNotrle();
    delay(300);
  }

  // Yunuslama hareketi
  servo2.write(135);
  servo4.write(45);
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(1000);

  servo2.write(45);
  servo4.write(135);
  delay(1000);

  servo2.write(135);
  servo4.write(45);
  delay(1000);
  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);

  // Yüzeye çıkış → LED yanar
  digitalWrite(ledPin, HIGH);
  tumServolariNotrle();
  delay(1000);
}

// ------------ GÖREV B --------------------
void gorev_b() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(135);
  servo5.write(45);
  delay(1500);

  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV C --------------------
void gorev_c() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(45);
  servo5.write(135);
  delay(1500);

  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV D --------------------
void gorev_d() {
  tumServolariNotrle();

  // Pitch yukarı
  servo2.write(135);
  servo4.write(45);
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(5000);

  // Stabilizasyon
  servo2.write(90);
  servo4.write(90);
  delay(3000);

  // Pitch aşağı
  servo2.write(45);
  servo4.write(135);
  delay(7000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();

  // Yüzeye çıkış: LED yanar, motor düşük hızda 3 saniye çalışır
  digitalWrite(ledPin, HIGH);
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_DONUS_PWM);
  delay(3000);
  motorYavasAzalt(MOTOR_DONUS_PWM, MOTOR_STOP_PWM);
  digitalWrite(ledPin, LOW);
  tumServolariNotrle();
}

// ------------ GÖREV E --------------------
void gorev_e() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);

  servo2.write(135);
  servo4.write(45);
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV F --------------------
void gorev_f() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(3000);

  servo2.write(45);
  servo4.write(135);
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ GÖREV H --------------------
void gorev_h() {
  tumServolariNotrle();
  motorYavasArtir(MOTOR_STOP_PWM, MOTOR_MAX_PWM);
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(45);
  servo5.write(135);
  delay(1500);

  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_DONUS_PWM);
  servo3.write(135);
  servo5.write(45);
  delay(1500);

  motorYavasArtir(MOTOR_DONUS_PWM, MOTOR_MAX_PWM);
  tumServolariNotrle();
  delay(5000);

  servo2.write(45);
  servo4.write(135);
  delay(5000);

  motorYavasAzalt(MOTOR_MAX_PWM, MOTOR_STOP_PWM);
  tumServolariNotrle();
}

// ------------ MOTOR PWM GEÇİŞLERİ -------------
void motorYavasArtir(int baslangicPWM, int hedefPWM) {
  for (int pwm = baslangicPWM; pwm >= hedefPWM; pwm -= 2) {
    servo1.writeMicroseconds(pwm);
    delay(10);
  }
}

void motorYavasAzalt(int baslangicPWM, int hedefPWM) {
  for (int pwm = baslangicPWM; pwm <= hedefPWM; pwm += 2) {
    servo1.writeMicroseconds(pwm);
    delay(10);
  }
}

// ------------ TÜM SERVOLARI NÖTRLE -------------
void tumServolariNotrle() {
  servo2.write(90);
  servo3.write(90);
  servo4.write(90);
  servo5.write(90);
}
